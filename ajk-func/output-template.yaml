AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Parameters:
  Env:
    Type: String
    AllowedValues:
    - dev
    - prod
    Default: dev
Mappings:
  Envs:
    dev:
      BucketName: test-bucket
      S3Endpoint: http://minio:9000
    prod:
      BucketName: test.theboss.tech
      S3Endpoint: ''
Globals:
  Function:
    Timeout: 30
  Api:
    Cors:
      AllowMethods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowOrigin: '''*'''
Resources:
  AjkFunctionCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sam-template-store.theboss.tech/4a86b22960d42b11a6ada52d5a58c64e
      Handler: ajk-func-create
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /ajk/create
            Method: POST
      Environment:
        Variables:
          S3_BUCKET_NAME:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
          S3_ENDPOINT:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - S3Endpoint
      Policies:
      - S3CrudPolicy:
          BucketName:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
  AjkFunctionShow:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sam-template-store.theboss.tech/4a86b22960d42b11a6ada52d5a58c64e
      Handler: ajk-func-show
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /ajk/show/{requestId}
            Method: GET
      Environment:
        Variables:
          S3_BUCKET_NAME:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
          S3_ENDPOINT:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - S3Endpoint
      Policies:
      - S3CrudPolicy:
          BucketName:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
  AjkFunctionDownload:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://sam-template-store.theboss.tech/4a86b22960d42b11a6ada52d5a58c64e
      Handler: ajk-func-download
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /ajk/download/{requestId}
            Method: GET
      Environment:
        Variables:
          S3_BUCKET_NAME:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
          S3_ENDPOINT:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - S3Endpoint
      Policies:
      - S3CrudPolicy:
          BucketName:
            Fn::FindInMap:
            - Envs
            - Ref: Env
            - BucketName
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::FindInMap:
        - Envs
        - Ref: Env
        - BucketName
Outputs:
  AjkAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/ajk/
  AjkFunctionCreate:
    Description: First Lambda Function ARN
    Value:
      Fn::GetAtt:
      - AjkFunctionCreate
      - Arn
  AjkFunctionCreateIamRole:
    Description: Implicit IAM Role created for ajk function
    Value:
      Fn::GetAtt:
      - AjkFunctionCreateRole
      - Arn
  AjkFunctionShow:
    Description: show
    Value:
      Fn::GetAtt:
      - AjkFunctionShow
      - Arn
  AjkFunctionShowIamRole:
    Description: download role
    Value:
      Fn::GetAtt:
      - AjkFunctionDownloadRole
      - Arn
  AjkFunctionDownload:
    Description: show
    Value:
      Fn::GetAtt:
      - AjkFunctionShow
      - Arn
